<div class="relative min-h-screen flex items-center justify-center bg-[#0a0a2a] text-white overflow-hidden font-poppins p-4">

  <!-- Background Glow Circles -->
  <div class="absolute top-0 -left-40 w-[400px] h-[400px] bg-yellow-400/10 rounded-full blur-3xl animate-float-slow"></div>
  <div class="absolute bottom-0 -right-40 w-[400px] h-[400px] bg-purple-600/10 rounded-full blur-3xl animate-float-slow delay-1000"></div>

  <!-- Sparkles -->
  <div class="absolute inset-0 pointer-events-none">
    <% 30.times do %>
      <span class="absolute w-1 h-1 bg-yellow-300 rounded-full animate-sparkle"
            style="top:<%= rand(100) %>%; left:<%= rand(100) %>%"></span>
    <% end %>
  </div>

  <!-- OTP Container -->
  <div class="relative z-10 w-full max-w-md flex flex-col items-center space-y-6 text-center animate-fade-in-up">

    <!-- Title -->
    <h1 class="text-4xl font-extrabold tracking-wide text-yellow-200 drop-shadow-md">
      Verify OTP
    </h1>
    <p class="text-gray-300 text-base italic">Please enter the 6-digit code sent to your email/phone</p>

    <!-- OTP Form -->
    <%= form_with url: users_verify_otp_path, local: true, class: "w-full space-y-6" do %>

      <!-- OTP Input Boxes -->
      <div class="grid grid-cols-6 gap-2">
        <% 6.times do |i| %>
          <input type="text" maxlength="1" name="otp_code[]" inputmode="numeric"
                 class="text-center text-xl bg-white/10 border border-yellow-300/30 focus:border-yellow-400 rounded-lg w-full h-14 text-white focus:outline-none focus:ring-2 focus:ring-yellow-300 transition" />
        <% end %>
      </div>

      <!-- Submit Button -->
      <%= submit_tag "✅ Verify OTP", class: "w-full py-3 bg-gradient-to-r from-yellow-300 to-orange-400 text-black font-bold rounded-xl shadow-lg hover:scale-105 transition-all duration-300 ease-in-out" %>
    <% end %>

    <!-- Resend Buttons -->
    <div class="w-full flex flex-col sm:flex-row gap-3 pt-2">
      <%= button_to users_resend_otp_path(via: "email"), method: :post,
            class: "w-full py-3 px-4 flex items-center justify-center gap-2 border border-yellow-300/50 bg-white/10 text-yellow-300 hover:bg-yellow-300 hover:text-black font-semibold rounded-xl shadow-md transition-all duration-300" do %>
        📧 Resend Email
      <% end %>

      <%= button_to users_resend_otp_path(via: "sms"), method: :post,
            class: "w-full  py-3 px-4 flex items-center justify-center gap-2 border border-yellow-300/50 bg-white/10 text-yellow-300 hover:bg-yellow-300 hover:text-black font-semibold rounded-xl shadow-md transition-all duration-300" do %>
        📱 Resend SMS
      <% end %>
    </div>

    <!-- Cancel -->
    <div class="pt-4">
      <%= link_to "← Cancel", root_path, class: "text-yellow-400 hover:text-yellow-300 underline text-xl" %>
    </div>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const inputs = document.querySelectorAll("input[name='otp_code[]']");

  // Focus first input on page load
  if (inputs.length) inputs[0].focus();

  inputs.forEach((input, index) => {
    input.addEventListener("input", (e) => {
      let value = e.target.value.replace(/\D/g, '');

      if (value.length > 1) {
        // Handle fast typing/paste
        const values = value.split('');
        for (let i = 0; i < values.length && index + i < inputs.length; i++) {
          inputs[index + i].value = values[i];
        }
        const nextIndex = index + values.length < inputs.length ? index + values.length : inputs.length - 1;
        inputs[nextIndex].focus();
      } else {
        e.target.value = value;
        if (value && index < inputs.length - 1) {
          inputs[index + 1].focus();
        }
      }
    });

    input.addEventListener("keydown", (e) => {
      if (e.key === "Backspace") {
        if (!e.target.value && index > 0) {
          inputs[index - 1].focus();
        }
      } else if (e.key === "ArrowLeft" && index > 0) {
        inputs[index - 1].focus();
      } else if (e.key === "ArrowRight" && index < inputs.length - 1) {
        inputs[index + 1].focus();
      }
    });

    input.addEventListener("paste", (e) => {
      e.preventDefault();
      const paste = (e.clipboardData || window.clipboardData).getData('text').replace(/\D/g, '');
      const chars = paste.slice(0, inputs.length).split('');
      chars.forEach((char, i) => {
        inputs[i].value = char;
      });
      if (chars.length > 0 && chars.length < inputs.length) {
        inputs[chars.length].focus();
      } else {
        inputs[inputs.length - 1].focus();
      }
    });

    // Auto select content on focus
    input.addEventListener("focus", (e) => {
      e.target.select();
    });
  });
});
</script>
